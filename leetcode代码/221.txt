class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int n = matrix.size(), m = matrix[0].size();
        vector dp(n, vector<int> (m));
        int MAX = 0;
        for (int i = 0; i < n; i ++ ) {
            dp[i][0] = matrix[i][0] - '0';
            MAX = max(MAX, dp[i][0]);
        }
        for (int j = 0; j < m; j ++ ) {
            dp[0][j] = matrix[0][j] - '0';
            MAX = max(MAX, dp[0][j]);
        }
        for (int i = 1; i < n; i ++ )
            for (int j = 1; j < m; j ++ ) {
                dp[i][j] = (matrix[i][j] - '0') * min(min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + matrix[i][j] - '0';
                MAX = max(MAX, dp[i][j]);
            }
        return MAX * MAX;
    }
};