class Solution {
public:
    int maxSumDivThree(vector<int>& nums) {
        int n = nums.size();
        vector dp(n, vector<int> (3));
        if (nums[0] % 3 == 0) dp[0][0] = nums[0];
        else if (nums[0] % 3 == 1) dp[0][1] = nums[0];
        else dp[0][2] = nums[0];
        for (int i = 1; i < n; i ++ ) {
            dp[i][0] = dp[i - 1][0];
            dp[i][1] = dp[i - 1][1];
            dp[i][2] = dp[i - 1][2];
            for (int j = 0; j < 3; j ++ ) {
                int sum = dp[i - 1][j] + nums[i];
                if (sum % 3 == 0) dp[i][0] = max(dp[i][0], sum);
                else if (sum % 3 == 1) dp[i][1] = max(dp[i][1], sum);
                else dp[i][2] = max(dp[i][2], sum);
            }
        }
        return dp[n - 1][0];
    }
};