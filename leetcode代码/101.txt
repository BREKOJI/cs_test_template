/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool func(TreeNode * left, TreeNode * right) {
        if (left == NULL && right == NULL) return true;
        else if (left != NULL && right != NULL && left -> val == right -> val) 
            return func(left -> left, right -> right) && func(right -> left, left -> right);
        else return false;
    }
public:
    bool isSymmetric(TreeNode* root) {
        return func(root -> left, root -> right);
    }
};