/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    queue<TreeNode*> q;
    void preorder(TreeNode * root) {
        if (!root) return;
        q.push(root);
        preorder(root -> left);
        preorder(root -> right);
    }
public:
    void flatten(TreeNode* root) {
        if (!root) return;
        preorder(root);
        TreeNode * pre = root;
        pre = root = q.front();
        q.pop();
        while (!q.empty()) {
            pre -> right = q.front();
            pre -> left = NULL;
            pre = q.front();
            q.pop();
        }
    }
};