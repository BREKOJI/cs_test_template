/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    queue<TreeNode*> q;
    vector<vector<int>> ans;
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if (root == NULL) return {};
        q.emplace(root);
        while (!q.empty()) {
            int nums = q.size();
            vector<int> temp;
            for (int i = 0; i < nums; i ++ ) {
                TreeNode * p = q.front();
                q.pop();
                temp.push_back(p -> val);
                if (p -> left != NULL) q.emplace(p -> left);
                if (p -> right != NULL) q.emplace(p -> right);
            }
            ans.emplace_back(temp);
        }
        return ans;
    }
};