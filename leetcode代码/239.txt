class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        deque<int> q;
        for (int i = 0; i < k; i ++ ){
            while (!q.empty() && nums[i] >= nums[q.back()])
                q.pop_back();
            q.emplace_back(i);
        }
        vector<int> ans = {nums[q.front()]};
        for (int i = k; i < n; i ++ ) {
            while (!q.empty() && nums[i] >= nums[q.back()])
                q.pop_back();
            q.emplace_back(i);
            if (q.front() <= i - k)
                q.pop_front();
            ans.emplace_back(nums[q.front()]);
        }
        return ans;
    }
};