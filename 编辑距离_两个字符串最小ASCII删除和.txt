dp[i][j]表示前i个字符变换到target前j个字符需要操作的次数

状态转移：
增：dp[i][j] = dp[i][j - 1] + 1
删：dp[i][j] = dp[i - 1][j] + 1
改：dp[i][j] = dp[i - 1][j - 1] + 1
当s1[i] == s2[j]时还有dp[i][j] = dp[i - 1][j - 1]这种可能

dp[i][j]表示s1前i个字符和s2前j个字符删除为最小字符串的最小ASCII码之和
状态转移：
当s1[i] == s2[j]时dp[i][j] = dp[i - 1][j - 1]
当s1[i] != s2[j]时，dp[i][j] = min(dp[i - 1][j] + s[i], dp[i][j - 1] + s[j])